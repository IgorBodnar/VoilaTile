<Application x:Class="VoilaTile.Configurator.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:VoilaTile.Configurator"
             xmlns:converters="clr-namespace:VoilaTile.Configurator.Converters"
             xmlns:vm="clr-namespace:VoilaTile.Configurator.ViewModels"
             xmlns:views="clr-namespace:VoilaTile.Configurator.Views">
    <Application.Resources>

        <!-- Converters -->
        <converters:WidthToHeightConverter x:Key="WidthToHeightConverter"/>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        
         <!-- Map body VMs to Views -->
        <DataTemplate DataType="{x:Type vm:CreateNewLayoutDialogViewModel}">
            <views:CreateNewLayoutDialogView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:RenameDialogViewModel}">
            <views:RenameDialogView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:InformationDialogViewModel}">
            <views:InformationDialogView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:ConfirmationDialogViewModel}">
            <views:ConfirmationDialogView />
        </DataTemplate>

        <!-- Brushes -->
        <SolidColorBrush x:Key="TextWhite" Color="#f5f3f4"/>
        <SolidColorBrush x:Key="BackgroundDarkGrayOpaque" Color="#161a1d"/>
        <SolidColorBrush x:Key="BackgroundDarkGray" Color="#dd161a1d"/>
        <SolidColorBrush x:Key="BackgroundLightestGray" Color="#b1a7a6"/>
        <SolidColorBrush x:Key="BackgroundLightGray" Color="#33b1a7a6"/>
        <SolidColorBrush x:Key="BackgroundMediumLightGray" Color="#22b1a7a6"/>
        <SolidColorBrush x:Key="CloseWindowRed" Color="#ba181b"/>
        <SolidColorBrush x:Key="AccentRed" Color="#e5383b"/>

        <!-- ScrollBar Style -->
        <Style TargetType="ScrollBar">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Width" Value="6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollBar">
                        <Grid Background="Transparent">
                            <Border Background="#22FFFFFF" CornerRadius="3" />
                            <Track x:Name="PART_Track"
                                   IsDirectionReversed="true"
                                   Minimum="0"
                                   Maximum="{TemplateBinding Maximum}"
                                   Value="{TemplateBinding Value}"
                                   ViewportSize="{TemplateBinding ViewportSize}">
                                <Track.Thumb>
                                    <Thumb>
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="Thumb">
                                                <Border Background="#88f5f3f4" CornerRadius="3" Margin="0"/>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Track.Thumb>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Visibility="Collapsed" IsTabStop="False"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Visibility="Collapsed" IsTabStop="False"/>
                                </Track.IncreaseRepeatButton>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Rounded Action Button -->
        <Style x:Key="RoundedRectActionButton" TargetType="Button">
            <Setter Property="Foreground" Value="{StaticResource TextWhite}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Opacity" Value="0.4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ComboBox Item Style -->
        <Style x:Key="ThemedComboBoxItem" TargetType="ComboBoxItem">
            <Setter Property="Foreground" Value="{StaticResource TextWhite}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter Margin="5,0,0,0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource AccentRed}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- ComboBox Style -->
        <Style x:Key="ThemedComboBox" TargetType="ComboBox">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6"/>
            <Setter Property="Background" Value="{StaticResource BackgroundLightGray}"/>
            <Setter Property="Foreground" Value="{StaticResource TextWhite}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BackgroundMediumLightGray}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource ThemedComboBoxItem}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                          Focusable="False"
                                          FocusVisualStyle="{x:Null}"
                                          ClickMode="Press"
                                          Background="{TemplateBinding Background}"
                                          Foreground="{TemplateBinding Foreground}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Name="Border"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="20" />
                                                </Grid.ColumnDefinitions>
                                                <ContentPresenter Name="ContentSite"
                                                                  Grid.Column="0"
                                                                  Margin="4,0,24,0"
                                                                  VerticalAlignment="Center"
                                                                  HorizontalAlignment="Left"
                                                                  Content="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=SelectionBoxItem}"
                                                                  ContentTemplate="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=SelectionBoxItemTemplate}"
                                                                  ContentTemplateSelector="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=ItemTemplateSelector}"
                                                                  RecognizesAccessKey="True"/>
                                                <Path Grid.Column="1"
                                                      HorizontalAlignment="Right"
                                                      VerticalAlignment="Center"
                                                      Margin="0,0,6,0"
                                                      Fill="{TemplateBinding Foreground}"
                                                      Data="M 0 0 L 4 4 L 8 0 Z"/>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>

                            <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide"
                                   Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <ScrollViewer Margin="0"
                                                  MaxHeight="200"
                                                  SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="False">
                                <Setter TargetName="Popup" Property="MaxHeight" Value="100"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource BackgroundLightGray}" />
                                <Setter Property="BorderBrush" Value="{StaticResource BackgroundMediumLightGray}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="Background" Value="{StaticResource BackgroundLightGray}" />
                                <Setter Property="BorderBrush" Value="{StaticResource BackgroundMediumLightGray}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ToolTip">
            <Setter Property="Background" Value="{StaticResource BackgroundDarkGrayOpaque}" />
            <Setter Property="Foreground" Value="{StaticResource TextWhite}" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Padding" Value="8,4" />
            <Setter Property="BorderBrush" Value="{StaticResource AccentRed}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HasDropShadow" Value="True" />
            <Setter Property="Placement" Value="Mouse" />
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">
                        <Border 
                    Background="{TemplateBinding Background}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="4"
                    Padding="{TemplateBinding Padding}">
                            <TextBlock 
                        Text="{TemplateBinding Content}" 
                        TextWrapping="Wrap"
                        Foreground="{TemplateBinding Foreground}" 
                        FontSize="{TemplateBinding FontSize}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>

