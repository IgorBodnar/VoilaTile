<Window x:Class="VoilaTile.Configurator.MainWindow"
        x:Name="SnapZonesMainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="clr-namespace:VoilaTile.Configurator.ViewModels"
        xmlns:views="clr-namespace:VoilaTile.Configurator.Views"
        xmlns:shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework"
        Height="1024" Width="768"
        WindowStyle="None" AllowsTransparency="True" Background="Transparent" Topmost="True" WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <shell:WindowChrome x:Key="CustomChrome"
                            CaptionHeight="0"
                            CornerRadius="0"
                            GlassFrameThickness="0"
                            ResizeBorderThickness="5"
                            UseAeroCaptionButtons="False" />
    </Window.Resources>

    <shell:WindowChrome.WindowChrome>
        <StaticResource ResourceKey="CustomChrome"/>
    </shell:WindowChrome.WindowChrome>

    <Grid Background="{StaticResource BackgroundDarkGray}">
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Custom Title Bar -->
        <Border Grid.Row="0" Height="40" Background="{StaticResource BackgroundMediumLightGray}" MouseLeftButtonDown="OnTitleBarMouseLeftButtonDown">
            <DockPanel LastChildFill="True">
                <!-- Title Logo -->
                <views:TitleLogo Height="20" Margin="10,0,0,0"/>

                <!-- Window Buttons -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Content="–" Foreground="{StaticResource TextWhite}" FontSize="18" Width="40" BorderBrush="Transparent" Click="OnClickMinimize">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="minimizeBorder"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        BorderBrush="Transparent">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="minimizeBorder" Property="Background" Value="{StaticResource BackgroundLightGray}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter TargetName="minimizeBorder" Property="Background" Value="{StaticResource BackgroundMediumLightGray}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button Content="☐" Foreground="{StaticResource TextWhite}" FontSize="16"  Width="40" Click="OnClickMaximize">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="minimizeBorder"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        BorderBrush="Transparent">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="minimizeBorder" Property="Background" Value="{StaticResource BackgroundLightGray}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter TargetName="minimizeBorder" Property="Background" Value="{StaticResource BackgroundMediumLightGray}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button Content="✕" Foreground="#f5f3f4" FontSize="16"  Width="40" Click="Close_Click">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border x:Name="minimizeBorder"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        BorderBrush="Transparent">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="minimizeBorder" Property="Background" Value="{StaticResource CloseWindowRed}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter TargetName="minimizeBorder" Property="Background" Value="{StaticResource BackgroundMediumLightGray}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </StackPanel>
            </DockPanel>
        </Border>

        <!-- Window Content -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="300" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="300"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="60"/>
            </Grid.RowDefinitions>

            <!-- Monitor canvas area -->
            <Border Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Margin="30,10,30,10">
                <Viewbox Stretch="Uniform" StretchDirection="DownOnly" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Canvas Width="{Binding TotalCanvasWidth}" Height="{Binding TotalCanvasHeight}">
                        <ItemsControl ItemsSource="{Binding Monitors}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemContainerStyle>
                                <Style>
                                    <Setter Property="Canvas.Left" Value="{Binding CanvasX}" />
                                    <Setter Property="Canvas.Top" Value="{Binding CanvasY}" />
                                </Style>
                            </ItemsControl.ItemContainerStyle>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type vm:MonitorViewModel}">
                                    <views:MonitorView />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Canvas>
                </Viewbox>
            </Border>

            <Border Grid.Column="0" Grid.Row="1" Padding="10">
                    <StackPanel DockPanel.Dock="Top">
                        <TextBlock Text="Selected Layout"
                                   FontWeight="Bold"
                                   Foreground="{StaticResource TextWhite}"
                                   FontSize="18"
                                   Margin="10 0 0 10"/>

                        <ItemsControl ItemsSource="{Binding SelectedTemplatePreview}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type vm:ZoneTemplatePreviewViewModel}">
                                    <views:ZoneTemplatePreviewView />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <!-- Settings Controls -->
                        <StackPanel Margin="10,20,15,0">
                            <TextBlock Text="Tile Hint Character Pool Seed"
                                       ToolTip="The set of characters used by VoilaTile to create the hints for the enumerated tiles.&#x0a;Longer seeds result in shorter hints for a large amount of the defined tiles."
                                       Foreground="{StaticResource TextWhite}"
                                       FontWeight="Bold"
                                       FontSize="14"
                                       Margin="0,0,0,4"/>

                            <TextBox Text="{Binding Settings.Seed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     Background="{StaticResource BackgroundLightGray}"
                                     Foreground="{StaticResource TextWhite}"
                                     BorderThickness="0"
                                     Padding="6"/>

                            <TextBlock Text="Snapper Shortcut Key"
                                       ToolTip="The action key used in the shortcut for the opening of the VoilaTile.Snapper overlays.&#x0a;The full shortcut will have the form of Win + Shift + { Your selected key }."
                                       Foreground="{StaticResource TextWhite}"
                                       FontWeight="Bold"
                                       FontSize="14"
                                       Margin="0,10,0,4"/>

                            <ComboBox ItemsSource="{Binding Settings.AvailableShortcutKeys}"
                                      SelectedItem="{Binding Settings.SelectedShortcutKey, Mode=TwoWay}"
                                      Height="28"
                                      Style="{StaticResource ThemedComboBox}"/>
                        </StackPanel>
                    </StackPanel>
            </Border>

            <Border Grid.Column="1" Grid.Row="1" Padding="10" Background="{StaticResource BackgroundMediumLightGray}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <TextBlock Text="Layout Templates"
                   FontWeight="Bold"
                   Foreground="{StaticResource TextWhite}"
                   FontSize="18"
                   Margin="10 0 0 6"/>

                    <ScrollViewer
                      x:Name="TemplatePreviewsScrollViewer"
                      Grid.Row="1"
                      VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Disabled"
                      CanContentScroll="True"
                      FocusVisualStyle="{x:Null}">
                        <ItemsControl ItemsSource="{Binding TemplatePreviews}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type vm:ZoneTemplatePreviewViewModel}">
                                    <views:InteractableZoneTemplatePreviewView />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Grid>
            </Border>

            <!-- Selected Layout Panel Buttons -->
            <Border Grid.Column="0" Grid.Row="2" Padding="10">
                <StackPanel Orientation="Horizontal">
                    <Button
                        ToolTip="Edit the layout which is currently selected on the active monitor.&#x0a;The changes will propagate to other monitors using the same layout."
                        Style="{StaticResource RoundedRectActionButton}" Background="{StaticResource AccentRed}" Width="135" Content="Edit Layout" Command="{Binding EditSelectedLayoutCommand}"/>
                </StackPanel>
            </Border>

            <!-- Layout Templates Panel Buttons -->
            <Border Grid.Column="1" Grid.Row="2" Padding="10" Background="{StaticResource BackgroundMediumLightGray}">
                <StackPanel Orientation="Horizontal">
                    <Button 
                        ToolTip="Create a new template layout.&#x0a;The editor will be open on the active monitor."
                        Style="{StaticResource RoundedRectActionButton}" Background="{StaticResource AccentRed}" Width="135" Content="New Template" Command="{Binding AddNewLayoutCommand}" Margin="0,0,10,0"/>
                    <Button 
                        ToolTip="Edit the selected template layout.&#x0a;The changes will propagate to other monitors using the same layout."
                        Style="{StaticResource RoundedRectActionButton}" Background="{StaticResource AccentRed}" Width="135" Content="Edit Template" Command="{Binding EditLayoutCommand}"/>
                </StackPanel>
            </Border>

        </Grid>
    </Grid>

</Window>

